
#include <iostream>
using namespace std;

#define max 10
class Queue{
    
    private:
        int queue[max];
       int front,rear;
        
        public:
    Queue(){
        rear=-1;
        front=0;
          
    }
    
    
    bool isempty(){
        return (rear ==-1 || front>rear);
    }
    
    bool isfull(){
        return (rear==max-1);
    }
    
    void pop(){
        if(isempty()){
            cout<<"underflow condition"<<endl;
            return;
        }
        
        
        int popped = queue[front++];
        
        cout<<"element deleted is "<<popped<<endl;
    }
    

    void push(int value){
        if(isfull()){
           cout<<"overflow";
           return;
        }
        if(front==-1){
            front=0;
        }
        
        queue[++rear]=value;
    }
    
    void display(){
        if(isempty()){
            cout <<"underflow "<<endl;
            return;
        }
        
        // while(front<=rear){
        //     cout<<queue[front]<<" ";
        //     front++;
        // }
        
        for(int i=front; i<=rear; i++){
            cout<<queue[i]<<" ";
            
        }
        
        cout<<endl;
    }
    
};

int main()
{
    Queue qq;
    
    
    qq.push(6);
    qq.push(8);
    qq.push(4);
    qq.push(6);
    
    
    qq.display();
    
    
    qq.pop();
    
    

    return 0;
}
